@model Brew.ViewModels.Recipes.DetailRecipeViewModel

@using (Html.BeginForm(Model.IsNewRecipe ? "Create" :"Update", "Recipes", FormMethod.Post,new { enctype = "multipart/form-data" } ))
{
    <div>
        <img height="300" width="300" src="@Url.Action("Index", "BeerImage", new { name = Model.BeerName })"/>
    </div>
    
    <label for="file">Filename:</label>
    <input type="file" name="File" id="File" />
    
    @Html.HiddenFor(m => m.IsNewRecipe)
    <fieldset>
        <legend>Overview</legend>
        @if (Model.IsNewRecipe)
        {
            <p>
                @Html.LabelFor(m => m.BeerName)
                @Html.TextBoxFor(m => m.BeerName)
                @Html.ValidationMessageFor(m => m.BeerName)
                @Html.HiddenFor(m => m.PostedDate)
            </p>
        }
        else
        {
            <p>
                @Html.LabelFor(m => m.BeerName)
                @Html.DisplayFor(m => m.BeerName)
                @Html.HiddenFor(m => m.BeerName)
                @Html.ValidationMessageFor(m => m.BeerName)
                @Html.HiddenFor(m => m.PostedDate)
            </p>
        }
        <p>
            @Html.LabelFor(m => m.Style)
            @Html.TextBoxFor(m => m.Style)
            @Html.ValidationMessageFor(m => m.Style)
        </p>
        <p>
            @Html.LabelFor(m => m.RecipeType)
            @Html.TextBoxFor(m => m.RecipeType)
            @Html.ValidationMessageFor(m => m.RecipeType)
        </p>
        <p>
            @Html.LabelFor(m => m.Abv)
            @Html.DisplayFor(m => m.Abv)
        </p>
    </fieldset>

    <fieldset>
        <legend>Stats</legend>
        <p>
            @Html.LabelFor(m => m.OriginalGravity)
            @Html.TextBoxFor(m => m.OriginalGravity)
            @Html.ValidationMessageFor(m => m.OriginalGravity)
        </p>
        <p>
            @Html.LabelFor(m => m.FinalGravity)
            @Html.TextBoxFor(m => m.FinalGravity)
            @Html.ValidationMessageFor(m => m.FinalGravity)
        </p>
        <p>
            @Html.LabelFor(m => m.Carbonation)
            @Html.TextBoxFor(m => m.Carbonation)
            @Html.ValidationMessageFor(m => m.Carbonation)
        </p>

        <p>
            @Html.LabelFor(m => m.Color)
            @Html.DisplayFor(m => m.Color)
            @Html.HiddenFor(m => m.Color)
            @Html.ValidationMessageFor(m => m.Color)
        </p>
        
    </fieldset>

    <section>
        <h1>Ingredients</h1>
        <section>
            <h2>Hops</h2>
            <div id ="hopList">
                <ul>                  
                    @for (int i = 0; i < Model.HopsUsed.Count; i++)
                    {
                        <li>
                            <span>
                                @Model.HopsUsed[i].Name <button type ="submit" name="submission" value="Delete Hop @Model.HopsUsed[i].Name">Delete</button>
                                @Html.HiddenFor(m => Model.HopsUsed[i].Name)
                                @Html.HiddenFor(m => Model.HopsUsed[i].Beta)  
                                @Html.HiddenFor(m => Model.HopsUsed[i].Alpha)  
                                @Html.HiddenFor(m => Model.HopsUsed[i].PercentCohumulone)  
                                @Html.HiddenFor(m => Model.HopsUsed[i].PercentCaryophyllene)
                                @Html.HiddenFor(m => Model.HopsUsed[i].PercentHumulene)    
                                @Html.HiddenFor(m => Model.HopsUsed[i].PercentMyrcene)                              
                            </span>
                        </li>
                    }
                </ul>
                @for (int i = 0; i < Model.RemovedHops.Count; i++)
                {
                    @Html.HiddenFor(m => Model.RemovedHops[i])
                }
            </div>
            @Html.TextBoxFor(m=>m.HopToAdd.Name, "Add Hop", new {@id = "addHopSearch"})
            <button type ="submit" name="submission" value="Add Hop" class="addItem">Add</button>
            @Html.ActionLink("Create New Hop", "Create", "Ingredients", new {type = "hop"}, new {@class = "openNewHop", data_newHop_id = "newHopDialog", data_newHop_title = "New Hop"})
        </section>
        <section>
            <h2>Fermentables</h2>
            <div id ="fermentableList">
                <ul>
                    @for (int i = 0; i < Model.FermentablesUsed.Count; i++)
                    {
                        <li>
                            <span>
                                @Model.FermentablesUsed[i].Name <button type ="submit" name="submission" value="Delete Fermentable @Model.FermentablesUsed[i].Name">Delete</button>
                                @Html.HiddenFor(m => Model.FermentablesUsed[i].Name)
                                @Html.HiddenFor(m => Model.FermentablesUsed[i].Color)
                                @Html.HiddenFor(m => Model.FermentablesUsed[i].CourseGrainYield)
                                @Html.HiddenFor(m => Model.FermentablesUsed[i].DiastaticPower)
                                @Html.HiddenFor(m => Model.FermentablesUsed[i].Yield)
                            </span>
                        </li>
                    }
                </ul>
                @for (int i = 0; i < Model.RemovedFermentables.Count; i++)
                {
                    @Html.HiddenFor(m => Model.RemovedFermentables[i])
                }
            </div>
            @Html.TextBoxFor(m=>m.FermentableToAdd.Name, "Add Fermentable", new {@id = "addFermentableSearch"})
            <button type ="submit" name="submission" value="Add Fermentable" class="addItem">Add</button>
            @Html.ActionLink("Create New Fermentable", "Create", "Ingredients", new {type = "fermentable"}, new {@class = "openNewFermentable", data_newFermentable_id = "newFermentableDialog", data_newFermentable_title = "New Fermentable"})
        </section>
    </section>
    

if (Model.Mash != null)
{
     <section>
         <h1>Mash</h1>
         <dl>
             <dt>@Html.LabelFor(m => m.Mash.GrainTemp)</dt>
             <dd>@Html.TextBoxFor(m => m.Mash.GrainTemp)</dd>
             <dt>@Html.LabelFor(m => m.Mash.TunTemp)</dt>
             <dd>@Html.TextBoxFor(m => m.Mash.TunTemp)</dd>
             <dt>@Html.LabelFor(m => m.Mash.SpargeTemp)</dt>
             <dd>@Html.TextBoxFor(m => m.Mash.SpargeTemp)</dd>
             <dt>@Html.LabelFor(m => m.Mash.PH)</dt>
             <dd>@Html.TextBoxFor(m => m.Mash.PH)</dd>
             <dt>@Html.LabelFor(m => m.Mash.TunWeight)</dt>
             <dd>@Html.TextBoxFor(m => m.Mash.TunWeight)</dd>
             <dt>@Html.LabelFor(m => m.Mash.TunSpecificHeat)</dt>
             <dd>@Html.TextBoxFor(m => m.Mash.TunSpecificHeat)</dd>
             <dt>@Html.LabelFor(m => m.Mash.EquipAdjust)</dt>
             <dd>@Html.TextBoxFor(m => m.Mash.EquipAdjust)</dd>
             <dt>@Html.LabelFor(m => m.Mash.Notes)</dt>
             <dd>@Html.TextBoxFor(m => m.Mash.Notes)</dd>
         </dl>
         <h2>Mash Steps</h2>
     <table id ="mashSteps">
         <thead>
             <tr>
                 <th scope="col">Name</th>
                 <th scope="col">Type</th>
                 <th scope="col">Infuse Amount (L)</th>
                 <th scope="col">Ramp Time</th>
                 <th scope="col">Step Temp (C)</th>
                 <th scope="col">Step Time</th>
                 <th scope="col">End Temp (C)</th>
                 <th scope="col">Infuse Temp (C)</th>
                 <th scope="col">Decoction Amount</th>
                 <th scope="col"></th>
                 <th style = "visibility:collapse" scope="col" />

             </tr>
         </thead>
         <tbody>
             @for (int i = 0; i < Model.Mash.Steps.Count; i++ )
             {
                 <tr id ="@Html.Raw("sortId_" + i)">
                     <td>@Html.TextBoxFor(m => m.Mash.Steps[i].Name)</td>
                     <td>@Html.TextBoxFor(m => m.Mash.Steps[i].Type)</td>
                     <td>@Html.TextBoxFor(m => m.Mash.Steps[i].InfuseAmountLiters)</td>
                     <td>@Html.TextBoxFor(m => m.Mash.Steps[i].RampTimeMin)</td>
                     <td>@Html.TextBoxFor(m => m.Mash.Steps[i].StepTempCel)</td>
                     <td>@Html.TextBoxFor(m => m.Mash.Steps[i].StepTimeMin)</td>
                     <td>@Html.TextBoxFor(m => m.Mash.Steps[i].EndTempCel)</td>
                     <td>@Html.TextBoxFor(m => m.Mash.Steps[i].InfuseTempCel)</td>
                     <td>@Html.TextBoxFor(m => m.Mash.Steps[i].DecoctionAmount)</td>
                     <td><button type ="submit" name="submission" value="Delete Mash Step @Model.Mash.Steps[i].UID">Delete</button></td>
                     <td style = "visibility:collapse" id ="@Html.Raw("sortId_" + i + "_Cell")">@Html.HiddenFor(m => m.Mash.Steps[i].SequenceNumber)</td>
                 </tr>
             }
         </tbody>
     </table>
         @for (int i = 0; i < Model.Mash.Steps.Count; i++)
         {
             @Html.HiddenFor(m => m.Mash.Steps[i].UID)
         }
         <button type ="submit" name="submission" value="Add Mash Step" class="addItem">New Mash Step</button>
         <button type ="submit" name="submission" value="Delete Mash Profile" class="addItem">Delete Mash Profile</button>
     </section>
 }
else
{
  <button type ="submit" name="submission" value="Add Mash Profile" class="addItem">Add Mash Profile</button>
}
    <fieldset>
        <legend>Community</legend>
    </fieldset>
    
    <input type="Submit" name="submission" value="Apply"/>
}